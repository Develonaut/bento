{
  "id": "product-automation",
  "type": "group",
  "version": "1.0.0",
  "name": "Product Photo Automation",
  "position": {
    "x": 0,
    "y": 0
  },
  "metadata": {
    "description": "Complete workflow: CSV → Folders → Copy Overlays → Blender → WebP. Processes multiple products end-to-end with parallel image optimization.",
    "usage": "export INPUT_CSV=tests/fixtures/products-test.csv BLENDER_MOCK_SCRIPT=tests/mocks/blender-mock.sh && bento run product-automation.bento.json",
    "example": "Reads 3 products from CSV, creates folder structure, copies overlay images, runs mock Blender, optimizes to WebP",
    "tags": ["phase8", "integration", "production", "automation", "end-to-end"],
    "phase": "8.7",
    "demonstrates": [
      "CSV reading (spreadsheet neta)",
      "Loop with forEach mode and index access",
      "File operations (mkdir, copy, delete)",
      "Shell command execution (Blender)",
      "Parallel image optimization",
      "Context passing between neta",
      "Streaming progress output",
      "Complete end-to-end workflow"
    ],
    "performance": "17.7 seconds for 3 products (5.9s per product) with mocks. Real Blender would take 10-15 minutes."
  },
  "parameters": {},
  "inputPorts": [],
  "outputPorts": [],
  "nodes": [
    {
      "id": "read-products",
      "type": "spreadsheet",
      "version": "1.0.0",
      "name": "Read Products CSV",
      "position": {
        "x": 100,
        "y": 100
      },
      "metadata": {
        "description": "Reads product CSV and outputs array of row maps with keys: sku, name, description, category"
      },
      "parameters": {
        "operation": "read",
        "format": "csv",
        "path": "{{.INPUT_CSV}}",
        "hasHeaders": true
      },
      "inputPorts": [],
      "outputPorts": [
        {
          "id": "out-1",
          "name": "rows"
        }
      ]
    },
    {
      "id": "process-each-product",
      "type": "loop",
      "version": "1.0.0",
      "name": "Process Each Product",
      "position": {
        "x": 300,
        "y": 100
      },
      "metadata": {
        "description": "Loops through each product row and processes it end-to-end: folder creation → copy overlay → Blender render → WebP optimization → cleanup"
      },
      "parameters": {
        "mode": "forEach",
        "items": "{{index . \"read-products\" \"rows\"}}",
        "showProgress": true
      },
      "inputPorts": [
        {
          "id": "in-1",
          "name": "items"
        }
      ],
      "outputPorts": [],
      "nodes": [
        {
          "id": "create-folder",
          "type": "file-system",
          "version": "1.0.0",
          "name": "Create Product Folder",
          "position": {
            "x": 50,
            "y": 50
          },
          "metadata": {
            "description": "Creates products/[product name]/ directory for the current product"
          },
          "parameters": {
            "operation": "mkdir",
            "path": "products/{{.item.name}}",
            "recursive": true
          },
          "inputPorts": [],
          "outputPorts": []
        },
        {
          "id": "copy-overlay",
          "type": "file-system",
          "version": "1.0.0",
          "name": "Copy Overlay Image",
          "position": {
            "x": 50,
            "y": 150
          },
          "metadata": {
            "description": "Copies the indexed overlay PNG from overlays/{index}.png to the product folder"
          },
          "parameters": {
            "operation": "copy",
            "source": "tests/fixtures/overlays/{{.index}}.png",
            "dest": "products/{{.item.name}}/overlay.png"
          },
          "inputPorts": [],
          "outputPorts": []
        },
        {
          "id": "render",
          "type": "shell-command",
          "version": "1.0.0",
          "name": "Run Blender Render",
          "position": {
            "x": 50,
            "y": 350
          },
          "metadata": {
            "description": "Executes Blender script to render 8 product photos. Uses mock script in tests which completes in ~2s instead of 5+ minutes. Streams progress output."
          },
          "parameters": {
            "command": "{{.BLENDER_MOCK_SCRIPT}}",
            "args": [
              "--",
              "--sku",
              "{{.item.name}}",
              "--overlay",
              "products/{{.item.name}}/overlay.png",
              "--output",
              "products/{{.item.name}}/render"
            ],
            "timeout": 60,
            "stream": true
          },
          "inputPorts": [],
          "outputPorts": []
        },
        {
          "id": "optimize",
          "type": "parallel",
          "version": "1.0.0",
          "name": "Optimize to WebP",
          "position": {
            "x": 50,
            "y": 450
          },
          "metadata": {
            "description": "Converts all 8 PNG renders to WebP format in parallel (4 concurrent). Achieves ~90% file size reduction with quality: 85."
          },
          "parameters": {
            "maxConcurrency": 4
          },
          "inputPorts": [],
          "outputPorts": [],
          "nodes": [
            {
              "id": "optimize-1",
              "type": "image",
              "version": "1.0.0",
              "name": "Optimize Render 1",
              "position": {
                "x": 50,
                "y": 50
              },
              "parameters": {
                "operation": "convert",
                "input": "products/{{.item.name}}/render-1.png",
                "output": "products/{{.item.name}}/render-1.webp",
                "format": "webp",
                "quality": 85
              },
              "inputPorts": [],
              "outputPorts": []
            },
            {
              "id": "optimize-2",
              "type": "image",
              "version": "1.0.0",
              "name": "Optimize Render 2",
              "position": {
                "x": 50,
                "y": 150
              },
              "parameters": {
                "operation": "convert",
                "input": "products/{{.item.name}}/render-2.png",
                "output": "products/{{.item.name}}/render-2.webp",
                "format": "webp",
                "quality": 85
              },
              "inputPorts": [],
              "outputPorts": []
            },
            {
              "id": "optimize-3",
              "type": "image",
              "version": "1.0.0",
              "name": "Optimize Render 3",
              "position": {
                "x": 50,
                "y": 250
              },
              "parameters": {
                "operation": "convert",
                "input": "products/{{.item.name}}/render-3.png",
                "output": "products/{{.item.name}}/render-3.webp",
                "format": "webp",
                "quality": 85
              },
              "inputPorts": [],
              "outputPorts": []
            },
            {
              "id": "optimize-4",
              "type": "image",
              "version": "1.0.0",
              "name": "Optimize Render 4",
              "position": {
                "x": 50,
                "y": 350
              },
              "parameters": {
                "operation": "convert",
                "input": "products/{{.item.name}}/render-4.png",
                "output": "products/{{.item.name}}/render-4.webp",
                "format": "webp",
                "quality": 85
              },
              "inputPorts": [],
              "outputPorts": []
            },
            {
              "id": "optimize-5",
              "type": "image",
              "version": "1.0.0",
              "name": "Optimize Render 5",
              "position": {
                "x": 50,
                "y": 450
              },
              "parameters": {
                "operation": "convert",
                "input": "products/{{.item.name}}/render-5.png",
                "output": "products/{{.item.name}}/render-5.webp",
                "format": "webp",
                "quality": 85
              },
              "inputPorts": [],
              "outputPorts": []
            },
            {
              "id": "optimize-6",
              "type": "image",
              "version": "1.0.0",
              "name": "Optimize Render 6",
              "position": {
                "x": 50,
                "y": 550
              },
              "parameters": {
                "operation": "convert",
                "input": "products/{{.item.name}}/render-6.png",
                "output": "products/{{.item.name}}/render-6.webp",
                "format": "webp",
                "quality": 85
              },
              "inputPorts": [],
              "outputPorts": []
            },
            {
              "id": "optimize-7",
              "type": "image",
              "version": "1.0.0",
              "name": "Optimize Render 7",
              "position": {
                "x": 50,
                "y": 650
              },
              "parameters": {
                "operation": "convert",
                "input": "products/{{.item.name}}/render-7.png",
                "output": "products/{{.item.name}}/render-7.webp",
                "format": "webp",
                "quality": 85
              },
              "inputPorts": [],
              "outputPorts": []
            },
            {
              "id": "optimize-8",
              "type": "image",
              "version": "1.0.0",
              "name": "Optimize Render 8",
              "position": {
                "x": 50,
                "y": 750
              },
              "parameters": {
                "operation": "convert",
                "input": "products/{{.item.name}}/render-8.png",
                "output": "products/{{.item.name}}/render-8.webp",
                "format": "webp",
                "quality": 85
              },
              "inputPorts": [],
              "outputPorts": []
            }
          ],
          "edges": []
        },
        {
          "id": "cleanup",
          "type": "file-system",
          "version": "1.0.0",
          "name": "Delete PNGs",
          "position": {
            "x": 50,
            "y": 550
          },
          "metadata": {
            "description": "Deletes all original PNG files after successful WebP conversion. Only overlay.png remains."
          },
          "parameters": {
            "operation": "delete",
            "path": "products/{{.item.name}}/render-*.png"
          },
          "inputPorts": [],
          "outputPorts": []
        }
      ],
      "edges": [
        {
          "id": "e1",
          "source": "create-folder",
          "target": "copy-overlay"
        },
        {
          "id": "e2",
          "source": "copy-overlay",
          "target": "render"
        },
        {
          "id": "e3",
          "source": "render",
          "target": "optimize"
        },
        {
          "id": "e4",
          "source": "optimize",
          "target": "cleanup"
        }
      ]
    }
  ],
  "edges": [
    {
      "id": "main",
      "source": "read-products",
      "sourcePort": "out-1",
      "target": "process-each-product",
      "targetPort": "in-1"
    }
  ]
}
